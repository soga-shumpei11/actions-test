name: GitHub Actions Demo2
run-name: diff-file
on:
  [push]
  # push:
  #   paths:
  #     - 'xxx/*/version.json'
jobs:
  job1:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.changed_environments.outputs.matrix }}
      steps:
        - name: Check out repository code
          uses: actions/checkout@v4.2.2
        - name: Print Environment
          id: changed_environments
          run: |
            set -euo pipefail

            git fetch origin ${{ github.event.before }} --depth=1

            ENVIRONMENTS=(dev stg prd)
            DETECTED_ENVIRONMENTS=()

            echo "github.event.before: ${{ github.event.before }}"
            echo "github.sha: ${{ github.sha }}"

            # 環境ごとに変更があるか確認。
            for ENVIRONMENT in ${ENVIRONMENTS[@]}; do
              # 過去、現在のコミットのversionを取得
              before_version=$(git show ${{ github.event.before }}:xxx/${ENVIRONMENT}/version.json | jq -r '.version')
              current_version=$(git show ${{ github.sha }}:xxx/${ENVIRONMENT}/version.json | jq -r '.version')

              # バージョンの差を確認
              if [ "$before_version" != "$current_version" ]; then
                echo "Version has changed: $before_version -> $current_version"
                DETECTED_ENVIRONMENTS+=("$ENVIRONMENT")
              else
                echo "Version has not changed: $current_version"
              fi
            done

            echo "DETECTED_ENVIRONMENTS: ${DETECTED_ENVIRONMENTS[@]}"

            # 環境が変更されていない場合は空の配列を出力
            if [ ${#DETECTED_ENVIRONMENTS[@]} -eq 0 ]; then
              echo "No environments changed."
              echo 'matrix=[]' > $GITHUB_OUTPUT
            else
              # DETECTED_ENVIRONMENTS配列をJSON配列に変換
              envs_json=$(printf '%s\n' "${DETECTED_ENVIRONMENTS[@]}" | jq -R . | jq -s -c .)
              echo "matrix=$envs_json"
              echo "matrix=$envs_json" >> $GITHUB_OUTPUT
            fi
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - name: Print Environment
        run: |
          echo "Environment: ${{ matrix.environment }}"
 